{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","async","delete","name","email","phone","className","onClick","style","cursor","bind","float","color","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updateContact","match","params","put","Header","branding","href","About","NotFound","Test","username","console","log","fetch","then","response","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d44f3fd1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\"); //await => wait for it to finish\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../Context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = e => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id }); // you won't do this in real life\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card card-body mb-3'>\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className='fas fa-sort-down'\r\n                  style={{ cursor: \"pointer\" }}\r\n                ></i>\r\n                <i\r\n                  className='fas fa-times'\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                ></i>\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className='fas fa-pencil-alt'\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      marginRight: \"1rem\",\r\n                      color: \"black\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className='list-group'>\r\n                  <li className='list-group-item'>Email: {email}</li>\r\n                  <li className='list-group-item'>Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className='display-4 mb-2'>\r\n                <span className='text-danger'>Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className='form-group'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className='invalid-feedback'>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Add Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Enter Name'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    name='email'\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Enter Phone'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type='submit'\r\n                    value='Add Contact'\r\n                    className='btn btn-light btn-block'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Edit Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Enter Name'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    name='email'\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Enter Phone'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type='submit'\r\n                    value='Update Contact'\r\n                    className='btn btn-light btn-block'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'>\r\n      <div className='container'>\r\n        <a href='/' className='navbar-brand'>\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className='navbar-nav mr-auto'>\r\n            <li className='nav-item'>\r\n              <Link to='/' className='nav-link'>\r\n                <i className='fas fa-home'></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link to='/contact/add' className='nav-link'>\r\n                <i className='fas fa-plus'></i> Add\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link to='/about' className='nav-link'>\r\n                <i className='fas fa-question'></i> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'>About Contact Manager</h1>\r\n      <p className='lead'>Simple app to manage contacts</p>\r\n      <div className='text-secondary'>Version 1.0.0</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'>\r\n        <span className='text-danger'>404</span> Page Not Found\r\n      </h1>\r\n      <p className='lead'>Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\n// React Component Lifecycles\r\n// jsonplaceholder => fake rest api website\r\nclass Test extends Component {\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount...\");\r\n    fetch(\"https://jsonplaceholder.typicode.com/users/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          id: data.id,\r\n          name: data.name,\r\n          username: data.username,\r\n          email: data.email\r\n        })\r\n      );\r\n  }\r\n\r\n  // UNSAFE_componentWillMount() {\r\n  //   console.log(\"componentWillMount...\");\r\n  // }\r\n\r\n  // UNSAFE_componentDidUpdate() {\r\n  //   console.log(\"componentDidUpdate...\");\r\n  // }\r\n\r\n  // UNSAFE_componentWillUpdate() {\r\n  //   console.log(\"componentWillUpdate...\");\r\n  // }\r\n\r\n  // UNSAFE_componentWillReceiveProps() {\r\n  //   console.log(\"componentWillReceiveProps...\");\r\n  // }\r\n\r\n  // static getDerivedStateFromProps(nextProps, prevState) {\r\n  //   return { test: \"something\" };\r\n  // }\r\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //   console.log(\"getSnapshotBeforeUpdate...\");\r\n  // }\r\n\r\n  render() {\r\n    const { id, name, username, email } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n        <ul>\r\n          <li>{id}</li>\r\n          <li>{name}</li>\r\n          <li>{username}</li>\r\n          <li>{email}</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Test;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport { Provider } from \"./Context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className='App'>\n            <Header branding='Contact Manager' />\n            <div className='container'>\n              <Switch>\n                <Route exact path='/' component={Contacts}></Route>\n                <Route exact path='/contact/add' component={AddContact}></Route>\n                <Route\n                  exact\n                  path='/contact/edit/:id'\n                  component={EditContact}\n                ></Route>\n                <Route exact path='/about' component={About}></Route>\n                <Route exact path='/test' component={Test}></Route>\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}